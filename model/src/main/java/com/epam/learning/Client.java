/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.epam.learning;

import org.apache.ignite.cache.affinity.AffinityKeyMapped;
import org.apache.ignite.cache.query.annotations.QuerySqlField;

import java.io.Serializable;

/**
 * Client definition.
 * <p>
 * Code generated by Apache Ignite Schema Import utility: 03/15/2016.
 */
public class Client implements Serializable {
    /** */
    private static final long serialVersionUID = 0L;

    @QuerySqlField(index = true)
    private int id;
    @QuerySqlField
    private Integer balance;
    @QuerySqlField(index = true)
    @AffinityKeyMapped
    private String type;

    /**
     * Empty constructor.
     */
    public Client() {
        // No-op.
    }

    /**
     * Full constructor.
     */
    public Client(int id, Integer balance, String type) {
        this.id = id;
        this.balance = balance;
        this.type = type;
    }

    /**
     * Gets id.
     *
     * @return Value for id.
     */
    public int getId() {
        return id;
    }

    /**
     * Sets id.
     *
     * @param id New value for id.
     */
    public void setId(int id) {
        this.id = id;
    }

    /**
     * Gets balance.
     *
     * @return Value for balance.
     */
    public Integer getBalance() {
        return balance;
    }

    /**
     * Sets balance.
     *
     * @param balance New value for balance.
     */
    public void setBalance(Integer balance) {
        this.balance = balance;
    }

    /**
     * Gets type.
     *
     * @return Value for type.
     */
    public String getType() {
        return type;
    }

    /**
     * Sets type.
     *
     * @param type New value for type.
     */
    public void setType(String type) {
        this.type = type;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public boolean equals(Object o) {
        if (this == o)
            return true;

        if (!(o instanceof Client))
            return false;

        Client that = (Client) o;

        if (id != that.id)
            return false;

        if (balance != null ? !balance.equals(that.balance) : that.balance != null)
            return false;

        if (type != null ? !type.equals(that.type) : that.type != null)
            return false;

        return true;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public int hashCode() {
        int res = id;

        res = 31 * res + (balance != null ? balance.hashCode() : 0);

        res = 31 * res + (type != null ? type.hashCode() : 0);

        return res;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String toString() {
        return "Client [id=" + id +
                ", balance=" + balance +
                ", type=" + type +
                "]";
    }
}

